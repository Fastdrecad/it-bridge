name: Deploy to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Build Next.js app
        run: npm run build

      - name: SSH into VPS and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -x  # Enable debug output

            echo "📁 Listing contents of /var/www before deploy:"
            ls -la /var/www

            # Check if /var/www/it-bridge is a valid Git repo
            if [ -d "/var/www/it-bridge/.git" ]; then
              echo "✅ Git repo found, pulling latest changes..."
              cd /var/www/it-bridge

              # Create backup
              timestamp=$(date +%Y%m%d%H%M%S)
              cp -r /var/www/it-bridge /var/www/it-bridge-backup-$timestamp

              # Check for uncommitted changes
              if ! git diff-index --quiet HEAD --; then
                echo "⚠️ Uncommitted changes found. Aborting pull to avoid overwriting."
                exit 1
              fi

              git fetch origin
              git pull origin master
            else
              echo "📁 No valid Git repo found. Resetting directory and cloning fresh copy..."
              rm -rf /var/www/it-bridge
              git clone https://github.com/Fastdrecad/it-bridge.git /var/www/it-bridge
            fi
            echo "🔐 Writing environment variables..."
            echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}" > /var/www/it-bridge/.env
            echo "NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}" >> /var/www/it-bridge/.env
            echo "MAILCHIMP_API_KEY=${{ secrets.MAILCHIMP_API_KEY }}" >> /var/www/it-bridge/.env
            echo "MAILCHIMP_AUDIENCE_ID=${{ secrets.MAILCHIMP_AUDIENCE_ID }}" >> /var/www/it-bridge/.env
            echo "MAILCHIMP_API_SERVER=${{ secrets.MAILCHIMP_API_SERVER }}" >> /var/www/it-bridge/.env
            echo "SMTP_USER=${{ secrets.SMTP_USER }}" >> /var/www/it-bridge/.env
            echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> /var/www/it-bridge/.env
            echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> /var/www/it-bridge/.env
            echo "MAILER_API_KEY=${{ secrets.MAILER_API_KEY }}" >> /var/www/it-bridge/.env
            echo "MAILER_LIST_ID=${{ secrets.MAILER_LIST_ID }}" >> /var/www/it-bridge/.env

            cd /var/www/it-bridge

            # Install dependencies and build
            echo "📦 Installing dependencies..."
            if [ -f "package.json" ]; then
              npm install
              npm run build
            else
              echo "Error: package.json not found, skipping npm install"
              exit 1
            fi

            # Restart PM2 process or start if not running
            echo "🚀 Restarting PM2 process..."
            pm2 list
            pm2 restart it-bridge || pm2 start npm --name "it-bridge" -- start

            echo "🎉 Deployment complete!"
